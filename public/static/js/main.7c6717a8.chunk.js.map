{"version":3,"sources":["constants/theme.js","constants/config.js","providers/auth-provider.js","providers/data-provider.js","i18n/customEnglishMessages.js","i18n/arabicMessages.js","i18n/customArabicMessages.js","i18n/index.js","providers/i18n-provider.js","routes/index.js","utils/set-root-dir-by-locale.js","utils/map-object-to-array.js","components/language-menu.js","components/workspace-bar.js","layout/app-bar.js","layout/sidebar.js","layout/menu.js","layout/index.js","components/time-ago-field.js","resources/dialog-nodes/list.js","resources/dialog-nodes/edit.js","resources/dialog-nodes/create.js","resources/dialog-nodes/index.js","resources/intents/list.js","resources/intents/edit.js","resources/intents/create.js","resources/intents/index.js","resources/workspaces/list.js","resources/workspaces/show.js","resources/workspaces/index.js","App.js","reportWebVitals.js","index.js"],"names":["theme","createMuiTheme","direction","palette","config","LOCAL_AUTH_KEY","LOCAL_WORKSPACE_KEY","api","baseUrl","adminUrl","authUrl","locales","default","ar","name","en","authProvider","login","username","password","request","Request","method","body","JSON","stringify","headers","Headers","fetch","then","response","status","Promise","reject","json","auth","localStorage","setItem","resolve","logout","removeItem","checkError","checkAuth","getItem","getPermissions","dataProvider","simpleRestProvider","url","options","Accept","parse","token","set","error","console","log","workspace","window","id","fetchUtils","fetchJson","customArabicMessages","menu","home","choices","response_type","text","selection_policy","random","sequential","multiline","resources","workspaces","fields","respond","values","tabs","general","responses","intents","examples","messages","ra","action","add_filter","add","back","bulk_actions","cancel","clear_input_value","clone","confirm","create","delete","edit","export","list","refresh","remove_filter","remove","save","search","show","sort","undo","unselect","expand","close","open_menu","close_menu","boolean","true","false","null","page","dashboard","loading","not_found","empty","invite","input","file","upload_several","upload_single","image","references","all_missing","many_missing","single_missing","toggle_visible","toggle_hidden","message","about","are_you_sure","bulk_delete_content","bulk_delete_title","delete_content","delete_title","details","invalid_form","no","yes","unsaved_changes","navigation","no_results","no_more_results","page_out_of_boundaries","page_out_from_end","page_out_from_begin","page_range_info","page_rows_per_page","next","prev","skip_nav","sort_by","ASC","DESC","auth_check_error","user_menu","sign_in","sign_in_error","notification","updated","created","deleted","bad_item","item_doesnt_exist","http_error","i18n_error","data_provider_error","canceled","logged_out","validation","required","minLength","maxLength","minValue","maxValue","number","email","oneOf","regex","pages","welcome_message","title","description","visible_to_user","conditions","intent","success","i18nMessages","_","merge","englishMessages","customEnglishMessages","arabicMessages","i18nProvider","polyglotI18nProvider","locale","allowMissing","routes","changeDir","dir","document","getElementById","setAttribute","mapObjectToArray","object","mapper","array","key","push","LanguageMenu","useState","anchorEl","setAnchorEl","setLocale","useSetLocale","currentLocale","useLocale","useEffect","setRootDirByLocale","handleClose","event","style","color","Button","aria-controls","aria-haspopup","onClick","currentTarget","keepMounted","open","Boolean","onClose","lang","MenuItem","changeLanguage","disabled","WorkspaceBar","props","setWorkspace","ws","getUpdatedLocalStorage","Card","textAlign","padding","Typography","fontWeight","CustomAppBar","AppBar","flex","useSidebarStyles","makeStyles","drawerPaper","Sidebar","classes","withRouter","onMenuClick","t","useTranslate","isXSmall","useMediaQuery","breakpoints","down","useSelector","state","admin","ui","sidebarOpen","getResources","map","resource","MenuItemLink","to","primaryText","leftIcon","createElement","icon","sidebarIsOpen","CustomLayout","Layout","appBar","sidebar","Menu","useStyles","TimeAgoField","source","record","useRecordContext","value","setValue","moment","fromNow","FunctionField","render","DialogNodeList","isSmall","List","exporter","SimpleList","secondaryText","tertiaryText","Datagrid","rowClick","TextField","sortable","BooleanField","label","EditButton","DialogNodeEdit","Edit","mutationMode","transform","data","filter","val","TabbedForm","FormTab","TextInput","lable","BooleanInput","ReferenceInput","field","reference","AutocompleteInput","optionText","optionValue","clearAlwaysVisible","resettable","allowEmpty","SelectInput","ArrayInput","SimpleFormIterator","DialogNodeCreate","Create","SimpleForm","order","Icon","IntentList","IntentCreate","WorkspaceList","localWorkspace","setLocalWorkspace","rowStyle","backgroundColor","linkType","ShowWorkspace","useShowController","location","Show","App","Admin","layout","customRoutes","Resource","WorkspacesResourceProps","DialogNodeResourceProps","IntentResourceProps","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.7c6717a8.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core/styles';\n\n\nconst theme = createMuiTheme({\n  \n  direction: 'rtl',\n\n  palette: {\n\n    // type: 'dark',\n\n  },\n\n});\n\n\nexport default theme;","\n\nconst isDev = process.env.NODE_ENV !== \"production\";\nconst host = isDev ? 'http://192.168.1.97:3001' : '';\n\n\nconst config = {\n\n  /**\n   * the localeStorage auth key name\n   * \n   */\n  LOCAL_AUTH_KEY: 'authToken',\n  LOCAL_WORKSPACE_KEY: 'workspaceId',\n  \n\n  /**\n   *  api config\n   * \n   */\n  api: {\n    baseUrl: host + '/api',\n    adminUrl: host + '/api/admin',\n    authUrl: host + '/api/admin/auth',\n  },\n\n\n  /**\n   * locales config\n   */\n  locales: {\n    default: 'ar',\n    ar: {\n      name: 'العربية',\n    },\n    en: {\n      name: 'English',\n    }\n  },\n\n}\n\n\nconst { LOCAL_AUTH_KEY, LOCAL_WORKSPACE_KEY, api, locales } = config;\n\nexport {\n  isDev,\n  LOCAL_AUTH_KEY,\n  LOCAL_WORKSPACE_KEY,\n  host,\n  api,\n  locales,\n}\n\nexport default config;","import { api, LOCAL_AUTH_KEY, LOCAL_WORKSPACE_KEY } from '../constants/config';\nimport { fetchUtils } from 'react-admin';\n\n\nconst authProvider = {\n  \n  /**\n   * LOGIN Method\n   * \n   */\n  login: ({ username, password }) => {\n    const request = new Request(`${api.authUrl}`, {\n      method: 'POST',\n      body: JSON.stringify({ username, password }),\n      headers: new Headers({ 'Content-Type': 'application/json' }),\n    });\n    return fetch(request)\n      .then(response => {\n        if (response.status < 200 || response.status >= 300) {\n          return Promise.reject();\n        }\n        return response.json();\n      })\n      .then(JSON.stringify)\n      .then(auth => {\n        localStorage.setItem(LOCAL_AUTH_KEY, auth);\n        return Promise.resolve();\n      });\n  },\n  \n  \n  /**\n   * LOGOUT Method\n   * \n   */\n  logout: () => {\n    localStorage.removeItem(LOCAL_AUTH_KEY);\n    return Promise.resolve();\n  },\n  \n  \n  /**\n   * CHECK AUTH Errors in responses\n   * \n   */\n  checkError: ({ status }) => {\n    if (status === 401 || status === 403) {\n      localStorage.removeItem(LOCAL_AUTH_KEY);\n      return Promise.reject();\n    }\n    return Promise.resolve();\n  },\n\n  \n  /**\n   * CHECK AUTH\n   * \n   */\n  checkAuth: () => {\n    return localStorage.getItem(LOCAL_AUTH_KEY)\n      ? Promise.resolve()\n      : Promise.reject();\n  },\n  \n  \n  /**\n   * GET PERMISSIOns\n   * \n   */\n  getPermissions: () => Promise.resolve(),\n\n}\n\n\n/** \n * set auth header before sending requests.\n * \n */\n const httpClient = (url, options = {}) => {\n  if (!options.headers) {\n      options.headers = new Headers({ Accept: 'application/json' });\n  }\n  try {\n    const auth = localStorage.getItem(LOCAL_AUTH_KEY)\n    const { token } = JSON.parse(auth);\n    if (token) {\n      options.headers.set('Authorization', `Bearer ${token}`);\n    }\n  }\n  catch (error) {\n    console.log(error);\n  }\n\n  /** inject workspace id from localstorage */\n  const workspace = window.localStorage.getItem(LOCAL_WORKSPACE_KEY);\n  if (workspace) {\n\n    try {\n      const { id } = JSON.parse(workspace);\n      options.headers.set('Workspace-Id', id);\n    }\n    catch(error) {\n      console.log(error);\n    }\n\n  }\n\n  return fetchUtils.fetchJson(url, options);\n};\n\n\nexport { httpClient };\n\nexport default authProvider;","import simpleRestProvider from 'ra-data-simple-rest';\nimport { api } from '../constants/config';\nimport { httpClient } from './auth-provider';\n\n\nconst dataProvider = (\n  simpleRestProvider(`${api.adminUrl}`, httpClient)\n);\n\n\nexport default dataProvider;","\n\nconst customArabicMessages = {\n\n  menu: {\n    home: 'Home',\n  },\n\n\n  choices: {\n    response_type: {\n      text: 'Text',\n    },\n    selection_policy: {\n      random: 'Random',\n      sequential: 'Sequential',\n      multiline: 'Multiline',\n    },\n  },\n\n  \n  resources: {\n    workspaces: {\n      name: 'robots',\n    },\n    \n    'dialog-nodes': {\n      name: 'Dialogs',\n      fields: {\n        respond: {\n          response_type: 'Response type',\n          selection_policy: 'Selection policy',\n          values: 'responses',\n        },\n        text: 'response',\n      },\n      tabs: {\n        general: 'General',\n        responses: 'Responses',\n      },\n    },\n  \n    intents: {\n      name: 'intents',\n      tabs: {\n        general: 'General',\n        examples: 'Examples',\n      },\n    }\n  },\n\n}\n\n\nexport default customArabicMessages;","const messages = {\n  ra: {\n    action: {\n      add_filter: \"إضافة فلتر\",\n      add: \"إضافة\",\n      back: \"العودة\",\n      bulk_actions: \"%{smart_count} العناصر المحددة\",\n      cancel: \"إلغاء\",\n      clear_input_value: \"إفراغ المدخلات\",\n      clone: \"استنساخ\",\n      confirm: \"تأكيد\",\n      create: \"إنشاء\",\n      delete: \"حذف\",\n      edit: \"تعديل\",\n      export: \"تصدير\",\n      list: \"قائمة\",\n      refresh: \"إعادة تحميل\",\n      remove_filter: \"إزالة هذا الفلتر\",\n      remove: \"إزالة\",\n      save: \"حفظ\",\n      search: \"بحث\",\n      show: \"عرض التفاصيل\",\n      sort: \"فرز\",\n      undo: \"تراجع\",\n      unselect: \"الغاء التحديد\",\n      expand: \"فرد\",\n      close: \"اغلاق\",\n      open_menu: \"افتح القائمة\",\n      close_menu: \"اغلق القائمة\",\n    },\n    boolean: {\n      true: \"نعم\",\n      false: \"لا\",\n      null: \"\",\n    },\n    page: {\n      create: \"إنشاء %{name}\",\n      dashboard: \"لوحة الإحصائيات\",\n      edit: \"%{name} #%{id}\",\n      error: \"هناك خطأ ما\",\n      list: \"%{name}\",\n      loading: \"جار التحميل\",\n      not_found: \"غير موجود\",\n      show: \"%{name} #%{id}\",\n      empty: \"لا يوجد %{name} حتي الان\",\n      invite: \"هل ترغب فى اضافة واحد؟\",\n    },\n    input: {\n      file: {\n        upload_several: \"إسقاط بعض الملفات للتحميل، أو انقر لتحديد واحد.\",\n        upload_single: \"إسقاط ملف للتحميل، أو انقر لتحديده.\",\n      },\n      image: {\n        upload_several: \"قم بإسقاط بعض الصور للتحميل، أو انقر لتحديد واحدة.\",\n        upload_single: \"إسقاط صورة للتحميل، أو انقر لتحديدها.\",\n      },\n      references: {\n        all_missing: \"غير قادر على العثور على بيانات المراجع.\",\n        many_missing: \"واحد على الأقل من المراجع المرتبطة لم تعد متوفرة.\",\n        single_missing: \"المرجع المرتبط لم يعد يبدو متاحًا.\",\n      },\n      password: {\n        toggle_visible: \"اخفاء الرقم السري\",\n        toggle_hidden: \"اظهار الرقم السري\",\n      },\n    },\n    message: {\n      about: \"حول\",\n      are_you_sure: \"هل أنت واثق؟\",\n      bulk_delete_content:\n        \"هل أنت متأكد أنك تريد حذف هذا %{name}? |||| هل أنت متأكد من أنك تريد حذف هذه العناصر%{smart_count}?\",\n      bulk_delete_title: \"حذف %{name} |||| احذف عناصر%{smart_count}%{name}\",\n      delete_content: \"هل أنت متأكد أنك تريد حذف هذا البند؟\",\n      delete_title: \"حذف %{name} #%{id}\",\n      details: \"تفاصيل\",\n      error: \"حدث خطأ في التطبيق ولم يمكن إكمال طلبك.\",\n      invalid_form: \"النموذج غير صالح. يرجى التحقق من وجود أخطاء\",\n      loading: \"يتم تحميل الصفحة، فقط لحظة من فضلك\",\n      no: \"لا\",\n      not_found: \"الصفحة غير موجودة\",\n      yes: \"نعم \",\n      unsaved_changes:\n        \"لم يتم حفظ بعض تغييراتك. هل أنت متأكد أنك تريد تجاهلها؟\",\n    },\n    navigation: {\n      no_results: \"لا توجد نتائج\",\n      no_more_results: \"رقم الصفحة%{page} خارج الحدود. جرب الصفحة السابقة.\",\n      page_out_of_boundaries: \"رقم الصفحة%{page} خارج الحدود\",\n      page_out_from_end: \"لا يمكن الذهاب بعد الصفحة الأخيرة\",\n      page_out_from_begin: \"لا يمكن الذهاب قبل الصفحة الأولى\",\n      page_range_info: \"%{offsetBegin}-%{offsetEnd} من %{total}\",\n      page_rows_per_page: \"الصفوف لكل صفحة:\",\n      next: \"التالى\",\n      prev: \"السابق\",\n      skip_nav: \"تخطي الى المحتوي\",\n    },\n    sort: {\n      sort_by: \"رتب حسب %{field} %{order}\",\n      ASC: \"تصاعدي\",\n      DESC: \"تنازلي\",\n    },\n    auth: {\n      auth_check_error: \"الرجاء تسجيل الدخول للاستمرار\",\n      user_menu: \"الملف الشخصي\",\n      username: \"اسم المستخدم\",\n      password: \"كلمة السر\",\n      sign_in: \"تسجيل الدخول\",\n      sign_in_error: \"أخفقت المصادقة، يرجى إعادة المحاولة\",\n      logout: \"الخروج\",\n    },\n    notification: {\n      updated: \"تم تحديث العنصر |||| تم تحديث%{smart_count} من العناصر\",\n      created: \"تم إنشاء العنصر\",\n      deleted: \"تم حذف العنصر |||| تم حذف%{smart_count} من العناصر\",\n      bad_item: \"عنصر غير صحيح\",\n      item_doesnt_exist: \"العنصر غير موجود\",\n      http_error: \"خطأ في اتصال الخادم\",\n      i18n_error: \"لا يمكن تحميل الترجمة لهذه اللغة\",\n      data_provider_error:\n        \"خطأ في مزود البيانات. تحقق من وحدة التحكم للحصول على التفاصيل.\",\n      canceled: \"تم إلغاء الإجراء\",\n      logged_out: \"انتهت جلستك، يرجى إعادة الاتصال.\",\n    },\n    validation: {\n      required: \"مطلوب\",\n      minLength: \"يجب أن يكون%{min} حرفًا على الأقل\",\n      maxLength: \"يجب أن يكون%{max} حرفًا أو أقل\",\n      minValue: \"يجب أن يكون%{min} على الأقل\",\n      maxValue: \"يجب أن يكون%{max} أو أقل\",\n      number: \"يجب أن يكون رقما\",\n      email: \"يجب أن يكون بريدًا إلكترونيًا صالحًا\",\n      oneOf: \"يجب أن يكون واحدًا من:%{options}\",\n      regex: \"يجب أن يتطابق مع تنسيق محدد (regex):%{pattern}\",\n    },\n  },\n}\n\n\nexport default messages;","\n\nconst customArabicMessages = {\n\n  menu: {\n    home: 'الرئيسية',\n  },\n\n  pages: {\n    home: {\n      welcome_message: 'مرحبا بك في لوحة التحكم.',\n    },\n  },\n\n\n  choices: {\n    response_type: {\n      text: 'نص',\n    },\n    selection_policy: {\n      random: 'عشوائي',\n      sequential: 'متسلسل',\n      multiline: 'متعدد الأسطر',\n    },\n  },\n  \n  resources: {\n    workspaces: {\n      name: 'الروبوتات',\n      fields: {\n        name: 'الاسم',\n      },\n    },\n\n    'dialog-nodes': {\n      name: 'المحادثات',\n      fields: {\n        title: 'العنوان',\n        description: 'الوصف',\n        visible_to_user: 'ظاهر للمستخدم؟',\n        conditions: 'شرط حدوث الرد',\n        created: 'تاريخ الإنشاء',\n        updated: 'تاريخ آخر تحديث',\n        respond: {\n          response_type: 'نوع الرد',\n          selection_policy: 'طريقة الرد',\n          values: 'الردود',\n        },\n        text: 'الرد',\n      },\n      tabs: {\n        general: 'عام',\n        responses: 'الردود',\n      },\n    },\n  \n    intents: {\n      name: 'المقاصد',\n      fields: {\n        intent: 'اسم المقصد',\n        description: 'الوصف',\n        created: 'تاريخ الإنشاء',\n        updated: 'تاريخ آخر تحديث',\n        examples: 'الأمثلة',\n        text: 'مثال'\n      },\n      tabs: {\n        general: 'عام',\n        examples: 'امثلة',\n      },\n      create: {\n        title: 'إنشاء مقصد',\n      },\n    }\n  },\n\n\n  ra: {\n\n    notification: {\n      deleted: \"جاري حذف العنصر |||| جاري حذف %{smart_count} من العناصر\",\n      success: 'تمت العملية بنجاح',\n    }\n\n  }\n\n}\n\n\nexport default customArabicMessages;","import _ from 'lodash';\nimport englishMessages from 'ra-language-english';\nimport customEnglishMessages from './customEnglishMessages';\nimport arabicMessages from './arabicMessages';\nimport customArabicMessages from './customArabicMessages';\n\n\nconst i18nMessages = {\n  \n  en: _.merge(englishMessages, customEnglishMessages),\n  \n  ar: _.merge(arabicMessages, customArabicMessages),\n  \n}\n\n\nexport default i18nMessages;","import polyglotI18nProvider from 'ra-i18n-polyglot';\nimport i18nMessages from '../i18n';\nimport { locales } from '../constants/config';\n\n\nconst i18nProvider = polyglotI18nProvider(locale => \n  i18nMessages[locale], // get locale messages object\n  locales.default, // default locale\n  { allowMissing: true } // disable polyglot wrnings.\n);\n\n\nexport default i18nProvider;","import React from \"react\";\nimport { Route } from 'react-router-dom';\n\n\nconst routes = [\n  // <Route exact path=\"/foo\" component={() => <p>Foo route</p>} />,\n];\n\n\nexport default routes;","const changeDir = (locale) => {\n  \n  console.log({ locale});\n\n  const dir = locale === 'ar' ? 'rtl' : 'ltr';\n  document.getElementById('root').setAttribute('dir', dir);\n\n}\n\n\nexport default changeDir;","\n\nconst mapObjectToArray = (object, mapper) => {\n\n  let array = [];\n  for (let key in object) {\n    array.push(mapper(object[key], key));\n  }\n\n  return array;\n}\n\n\nexport default mapObjectToArray;","import React, { useEffect, useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport LanguageIcon from '@material-ui/icons/Language';\n\nimport { locales } from '../constants/config';\nimport { useSetLocale, useLocale } from 'react-admin';\nimport setRootDirByLocale from '../utils/set-root-dir-by-locale';\nimport mapObjectToArray from '../utils/map-object-to-array';\n\n\nconst LanguageMenu = () => {\n  const [anchorEl, setAnchorEl] = useState(null);\n  const setLocale = useSetLocale();\n  const currentLocale = useLocale();\n\n\n  useEffect(() => {\n    setRootDirByLocale(locales.default);\n  }, []);\n  \n  useEffect(() => {\n    console.log({ currentLocale });\n  }, [currentLocale]);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = (event) => {\n    setAnchorEl(null);\n  };\n\n  const changeLanguage = (locale) => {\n    setLocale(locale);\n    setRootDirByLocale(locale);\n    handleClose();\n  };\n\n\n  return (\n    <div style={{ color: 'inherit' }}>\n      <Button style={{ color: '#fff' }} aria-controls=\"language-menu\" aria-haspopup=\"true\" onClick={handleClick}>\n        <LanguageIcon color='inherit' />\n      </Button>\n      <Menu\n        id=\"language-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        {mapObjectToArray(locales, (lang, locale) => (\n          <MenuItem\n            key={locale}\n            onClick={() => changeLanguage(locale)}\n            disabled={currentLocale === locale}\n          >{lang.name}</MenuItem>\n        ))}\n      </Menu>\n    </div>\n  );\n}\n\n\nexport default LanguageMenu;","import React, { useEffect, useState } from 'react';\nimport { LOCAL_WORKSPACE_KEY } from '../constants/config';\nimport { Card, Typography, Link } from '@material-ui/core';\nimport { Button } from 'react-admin';\n\n\nconst WorkspaceBar = (props) => {\n  const [workspace, setWorkspace] = useState({});\n\n\n  const getUpdatedLocalStorage = () => {\n    console.log('storage event');\n    const workspace = window.localStorage.getItem(LOCAL_WORKSPACE_KEY);\n    if (workspace) {\n\n      try {\n        const ws = JSON.parse(workspace);\n        setWorkspace(ws);\n      }\n      catch(error) {\n        console.log(error);\n      }\n\n    }\n  }\n\n  useEffect(() => {\n    getUpdatedLocalStorage();\n  }, [])\n\n\n  return (\n    <Card style={{\n      textAlign: 'center',\n      padding: 10,\n    }}>\n      <Typography style={{\n        fontWeight: 'bold',\n        color: '#555',\n      }}>{workspace.name}</Typography>\n    </Card>\n  );\n}\n\n\nexport default WorkspaceBar;","import React, { useEffect, useState } from 'react';\nimport { AppBar } from 'react-admin';\nimport { Typography } from '@material-ui/core';\nimport LanguageMenu from '../components/language-menu';\nimport WorkspaceBar from '../components/workspace-bar';\n\n\nconst CustomAppBar = (props) => {\n  return (<>\n    <AppBar {...props} color='primary'>\n      {/* <Typography variant='h6' id='react-admin-title' /> */}\n      <div style={{ flex: 1 }} />\n      <LanguageMenu />\n    </AppBar>\n    <WorkspaceBar />\n  </>);\n}\n\n\nexport default CustomAppBar;","import React from 'react';\nimport {\n    Sidebar as RASidebar\n} from 'react-admin';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useSidebarStyles = makeStyles({\n    drawerPaper: {\n        // backgroundColor: '#eee',\n        // boxShadow: '13px 0px 17px -21px #999 inset',\n    },\n});\n\nconst Sidebar = props => {\n    const classes = useSidebarStyles();\n    return (\n        <RASidebar classes={classes} {...props} />\n    );\n};\n\nexport default Sidebar;","import * as React from 'react';\nimport { createElement } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useMediaQuery, Divider } from '@material-ui/core';\nimport { MenuItemLink, getResources, useTranslate } from 'react-admin';\nimport { withRouter } from 'react-router-dom';\n\n\nconst Menu = ({ onMenuClick, logout }) => {\n  const t = useTranslate();\n  const isXSmall = useMediaQuery(theme => theme.breakpoints.down('xs'));\n  const open = useSelector(state => state.admin.ui.sidebarOpen);\n  const resources = useSelector(getResources);\n  return (<>\n    {resources.map(resource => (\n      <MenuItemLink\n        key={resource.name}\n        to={`/${resource.name}`}\n        primaryText={t(`resources.${resource.name}.name`)}\n        leftIcon={createElement(resource.icon)}\n        onClick={onMenuClick}\n        sidebarIsOpen={open}\n      />\n    ))}\n    <div style={{ flex: 1 }}></div>\n    {isXSmall && logout}\n  </>);\n}\n\nexport default withRouter(Menu);","import { Layout } from 'react-admin';\nimport AppBar from './app-bar';\nimport Sidebar from './sidebar';\nimport Menu from './menu';\n\n\nconst CustomLayout = (props) => {\n  return (\n    <Layout\n      {...props}\n      appBar={AppBar}\n      sidebar={Sidebar}\n      menu={Menu}\n    />\n  );\n}\n\n\nexport default CustomLayout;","import React, { useEffect, useState } from \"react\";\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { FunctionField, useLocale, useRecordContext } from 'react-admin';\nimport moment from 'moment';\nimport 'moment/locale/ar';\n\n\nconst TimeAgoField = ({ source, ...props }) => {\n  const classes = useStyles();\n  const locale = useLocale();\n  const record = useRecordContext();\n  const [value, setValue] = useState(record[source]);\n\n\n  useEffect(() => {\n    moment.locale(locale);\n    setValue(moment(record[source]).fromNow());\n  }, [locale])\n\n\n  return (\n    <FunctionField {...props} render={() => value} />\n  );\n}\n\n\nconst useStyles = makeStyles(() => ({\n\n}))\n\n\nTimeAgoField.propTypes = {\n    label: PropTypes.string,\n    record: PropTypes.object,\n    source: PropTypes.string.isRequired,\n};\n\n\nexport default TimeAgoField;","import React from \"react\";\nimport {\n  List,\n  Datagrid,\n  TextField,\n  EditButton,\n  SimpleList,\n  BooleanField,\n} from 'react-admin';\nimport { useMediaQuery } from '@material-ui/core';\nimport TimeAgoField from '../../components/time-ago-field';\nimport moment from \"moment\";\n\n\nconst DialogNodeList = props => {\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n\n\n  return (\n    <List\n      {...props}\n      exporter={false}\n    >\n      {isSmall ? (\n        <SimpleList\n          primaryText={record => record.title}\n          secondaryText={record => record.description}\n          tertiaryText={record => (\n            moment(record.updated).fromNow()\n          )}\n        />\n      ) : (\n        <Datagrid rowClick='edit'>\n          <TextField source=\"title\" sortable={false} />\n          <BooleanField label='resources.dialog-nodes.fields.visible_to_user' source=\"metadata.visible\" sortable={false} />\n          <TimeAgoField source=\"created\" sortable={false} />,\n          <TimeAgoField source=\"updated\" />,\n          <EditButton />\n        </Datagrid>        \n      )}\n    </List>\n  );\n}\n\n\nexport default DialogNodeList;","import React from 'react';\nimport {\n  Edit,\n  SimpleForm,\n  ReferenceInput,\n  SelectInput,\n  TextInput,\n  SimpleFormIterator,\n  ArrayInput,\n  useTranslate,\n  TabbedForm,\n  FormTab,\n  AutocompleteInput,\n  BooleanInput,  \n} from 'react-admin';\n\nconst DialogNodeEdit = (props) => {\n  const t = useTranslate();\n\n\n  const transform = data => {\n    data.conditions = data.conditions || '';\n\n    data.respond.response_type = 'text'\n    data.respond.values = data.respond.values.filter(val => !!val);\n\n    return data;\n  }\n\n\n  return (\n    <Edit {...props} mutationMode='pessimistic' transform={transform}>\n      <TabbedForm>\n        <FormTab label={t('resources.dialog-nodes.tabs.general')}>\n          <TextInput source=\"title\" lable='resources.intents.fields.title' />\n          <TextInput source=\"description\" />\n\n          <BooleanInput label=\"resources.dialog-nodes.fields.visible_to_user\" source=\"metadata.visible\" />\n\n          <ReferenceInput\n            source='conditions'\n            sort={{ field: 'updated' }}\n            reference=\"intents\"\n          >\n            {/* <SelectInput optionText='intent' optionValue='id' /> */}\n            <AutocompleteInput\n              optionText='intent'\n              optionValue='id'\n              clearAlwaysVisible\n              resettable\n              allowEmpty\n            />\n          </ReferenceInput>\n\n          {/* <SelectInput source=\"respond.response_type\" value='text' choices={[\n            { id: 'text', name: t('choices.response_type.text') },\n          ]} /> */}\n          <SelectInput source=\"respond.selection_policy\" choices={[\n            { id: 'random', name: t('choices.selection_policy.random') },\n            { id: 'sequential', name: t('choices.selection_policy.sequential') },\n            { id: 'multiline', name: t('choices.selection_policy.multiline') },\n          ]} />\n        </FormTab>\n        <FormTab label={t('resources.dialog-nodes.tabs.responses')}>\n          <ArrayInput source=\"respond.values\" label=''>\n            <SimpleFormIterator>\n              <TextInput source=\"text\" />\n            </SimpleFormIterator>\n          </ArrayInput>\n        </FormTab>\n      </TabbedForm>\n    </Edit>\n  );\n}\n\n\nexport default DialogNodeEdit;","import React from 'react';\nimport {\n  Create,\n  SimpleForm,\n  ReferenceInput,\n  SelectInput,\n  TextInput,\n  AutocompleteInput,\n} from 'react-admin';\n\n\nconst DialogNodeCreate = (props) => {\n\n\n  return (\n    <Create {...props}>\n      <SimpleForm>\n        <TextInput source=\"title\" />\n        <TextInput source=\"description\" />\n\n        <ReferenceInput\n          source='conditions'\n          sort={{ field: 'updated', order: 'DESC' }}\n          reference=\"intents\"\n        >\n          {/* <SelectInput optionText='intent' optionValue='id' /> */}\n          <AutocompleteInput optionText='intent' optionValue='id' />\n        </ReferenceInput>\n      </SimpleForm>\n    </Create>\n  )\n}\n\n\nexport default DialogNodeCreate;","import Icon from '@material-ui/icons/Forum';\nimport List from './list';\nimport Edit from './edit';\nimport Create from './create';\n\n\nexport default {\n  name: 'dialog-nodes',\n  icon: Icon,\n  list: List,\n  edit: Edit,\n  create: Create,\n};","import React from \"react\";\nimport {\n  List,\n  Datagrid,\n  TextField,\n  EditButton,\n  SimpleList,\n  CloneButton,\n} from 'react-admin';\nimport { useMediaQuery } from '@material-ui/core';\nimport TimeAgoField from '../../components/time-ago-field';\nimport moment from \"moment\";\n\n\nconst IntentList = props => {\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n    \n  return (\n    <List\n      {...props}\n      exporter={false}\n    >\n      {isSmall ? (\n        <SimpleList\n          primaryText={record => record.intent}\n          secondaryText={record => record.description}\n          tertiaryText={record => (\n            moment(record.updated).fromNow()\n          )}\n        />\n      ) : (\n        <Datagrid rowClick='edit'>\n          <TextField source=\"intent\" />\n          <TimeAgoField source=\"created\" sortable={false} />,\n          <TimeAgoField source=\"updated\" />,\n          <EditButton />\n        </Datagrid>        \n      )}\n    </List>\n  );\n}\n\n\nexport default IntentList;","import React from 'react';\nimport {\n  Edit,\n  SimpleForm,\n  TextInput,\n  SimpleFormIterator,\n  ArrayInput,\n  useTranslate,\n  TabbedForm,\n  FormTab,\n} from 'react-admin';\n\nconst DialogNodeEdit = (props) => {\n  const t = useTranslate();\n\n\n  const transform = data => {\n    data.examples = data.examples.filter(val => !!val);\n\n    return data;\n  }\n\n\n  return (\n    <Edit {...props} mutationMode='pessimistic' transform={transform}>\n      <TabbedForm>\n        <FormTab label={t('resources.intents.tabs.general')}>\n          <TextInput source=\"intent\" />\n          <TextInput source=\"description\" />\n        </FormTab>\n        <FormTab label={t('resources.intents.tabs.examples')}>\n          <ArrayInput source=\"examples\" label=''>\n            <SimpleFormIterator>\n              <TextInput source=\"text\" />\n            </SimpleFormIterator>\n          </ArrayInput>\n        </FormTab>\n      </TabbedForm>\n    </Edit>\n  );\n}\n\n\nexport default DialogNodeEdit;","import React from 'react';\nimport {\n  Create,\n  SimpleForm,\n  TextInput,\n} from 'react-admin';\n\n\nconst IntentCreate = (props) => {\n\n  return (\n    <Create {...props}>\n        <SimpleForm>\n            <TextInput source=\"intent\" />\n            <TextInput source=\"description\" />\n        </SimpleForm>\n    </Create>\n  )\n}\n\n\nexport default IntentCreate;","import Icon from '@material-ui/icons/BubbleChart';\nimport List from './list';\nimport Edit from './edit';\nimport Create from './create';\n\n\nexport default {\n  name: 'intents',\n  icon: Icon,\n  list: List,\n  edit: Edit,\n  create: Create,\n};","import React, { useEffect, useState } from \"react\";\nimport { LOCAL_WORKSPACE_KEY } from '../../constants/config';\nimport {\n  List,\n  SimpleList,\n} from 'react-admin';\n\n\nconst WorkspaceList = props => {\n  const [localWorkspace, setLocalWorkspace] = useState({});\n\n\n  useEffect(() => {\n    const workspace = window.localStorage.getItem(LOCAL_WORKSPACE_KEY);\n    if (workspace) {\n\n      try {\n        const ws = JSON.parse(workspace);\n        setLocalWorkspace(ws);\n      }\n      catch(error) {\n        console.log(error);\n      }\n\n    }\n  }, [])\n\n\n  return (\n    <List\n      {...props}\n      exporter={false}\n      sort={{ field: 'name', order: 'ASC' }}\n    >\n      <SimpleList \n        primaryText={record => record.name}\n        rowStyle={record => ({\n          backgroundColor: localWorkspace.id === record.id ? '#dfd' : '#fff',\n        })}\n        linkType='show'\n      />\n    </List>\n  );\n}\n\n\nexport default WorkspaceList;","import React, { useEffect } from 'react';\nimport { LOCAL_WORKSPACE_KEY } from '../../constants/config';\nimport { useShowController } from 'react-admin';\n\n\nconst ShowWorkspace = (props) => {\n  const { record } = useShowController(props);\n\n\n  useEffect(() => {\n\n    const { id, name } = record;\n    window.localStorage.setItem(LOCAL_WORKSPACE_KEY, JSON.stringify({ id, name }));\n    window.location = '/';\n\n  }, [record]);\n\n  return null;\n}\n\n\nexport default ShowWorkspace;","import Icon from '@material-ui/icons/DeviceHub';\nimport List from './list';\nimport Show from './show'\n\n\nexport default {\n  name: 'workspaces',\n  icon: Icon,\n  list: List,\n  show: Show,\n};","import React from \"react\";\nimport { Admin, Resource } from 'react-admin';\n\nimport theme from './constants/theme';\nimport dataProvider from './providers/data-provider';\nimport authProvider from './providers/auth-provider';\nimport i18nProvider from './providers/i18n-provider';\nimport routes from './routes';\n\nimport Layout from \"./layout/index\";\nimport DialogNodeResourceProps from './resources/dialog-nodes';\nimport IntentResourceProps from './resources/intents';\nimport WorkspacesResourceProps from './resources/workspaces';\n\n\nconst App = () => {\n  return (<>\n    <Admin\n      layout={Layout}\n      \n      customRoutes={routes}\n      theme={theme}\n      \n      dataProvider={dataProvider}\n      authProvider={authProvider}\n      i18nProvider={i18nProvider}\n    > \n      <Resource {...WorkspacesResourceProps} />\n      <Resource {...DialogNodeResourceProps} />\n      <Resource {...IntentResourceProps} />\n    </Admin>\n  </>);\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}